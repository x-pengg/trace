<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>upload</title>
    <link rel='stylesheet' href='/css/style.css' />
</head>
<body>

<div id="container">
<button id="test">上传图片</button>
</div>
<div id="description">

</div>
<input type="hidden" id="domain" value="<%= domain %>">
<script src="//cdn.bootcss.com/jquery/2.2.0/jquery.js"></script>
<script src="/js/moxie.js"></script>
<script src="/js/plupload_dev.js"></script>
<script src="/js/qiniu.js"></script>
<script type="text/javascript">
   $(function () {
       var uploader = Qiniu.uploader({
           runtimes: 'html5,flash,html4',      // 上传模式，依次退化
           browse_button: 'test',         // 上传选择的点选按钮，必需
           uptoken_url: '/getUpToken',         // Ajax请求uptoken的Url，强烈建议设置（服务端提供）
           uptoken_func: function(file){    // 在需要获取uptoken时，该方法会被调用
               console.log('获取 qiniu token...');
               return uptoken;
           },
           get_new_uptoken: false,             // 设置上传文件的时候是否每次都重新获取新的uptoken
           // downtoken_url: '/downtoken',
           // Ajax请求downToken的Url，私有空间时使用，JS-SDK将向该地址POST文件的key和domain，服务端返回的JSON必须包含url字段，url值为该文件的下载地址
           // unique_names: true,              // 默认false，key为文件名。若开启该选项，JS-SDK会为每个文件自动生成key（文件名）
           // save_key: true,                  // 默认false。若在服务端生成uptoken的上传策略中指定了sava_key，则开启，SDK在前端将不对key进行任何处理
           domain: $('#domain').val(),     // bucket域名，下载资源时用到，必需
           container: 'container',             // 上传区域DOM ID，默认是browser_button的父元素
           max_file_size: '10mb',             // 最大文件体积限制
           flash_swf_url: 'path/of/plupload/Moxie.swf',  //引入flash，相对路径
           max_retries: 3,                     // 上传失败最大重试次数
           dragdrop: true,                     // 开启可拖曳上传
           drop_element: 'container',          // 拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
           chunk_size: '4mb',                  // 分块上传时，每块的体积
           auto_start: true,                   // 选择文件后自动上传，若关闭需要自己绑定事件触发上传
           //x_vars : {
           //    查看自定义变量
           //    'time' : function(up,file) {
           //        var time = (new Date()).getTime();
           // do something with 'time'
           //        return time;
           //    },
           //    'size' : function(up,file) {
           //        var size = file.size;
           // do something with 'size'
           //        return size;
           //    }
           //},
           init: {
               'FilesAdded': function(up, files) {
                   plupload.each(files, function(file) {
                       // 文件添加进队列后，处理相关的事情
                   });
               },
               'BeforeUpload': function(up, file) {
                   // 每个文件上传前，处理相关的事情
               },
               'UploadProgress': function(up, file) {
                   // 每个文件上传时，处理相关的事情
                   var uploaded = file.loaded;
                   var size = plupload.formatSize(uploaded).toUpperCase();
                   var formatSpeed = plupload.formatSize(file.speed).toUpperCase();
                   var percentage = file.percent;
                   percentage = parseInt(percentage, 10);
                   if (file.status !== plupload.DONE && percentage === 100) {
                       percentage = 99;
                   }
                   console.log("已上传: " + size + " 上传速度： " + formatSpeed + "/s  上传进度: "+percentage + '%');
               },
               'FileUploaded': function(up, file, info) {
                   var domain = up.getOption('domain'),
                           res = JSON.parse(info),
                           sourceLink = domain +'/'+ res.key;
                   var exifOjb = Qiniu.exif(res.key);
                   if(!exifOjb){
                       alert('你上传的是什么鬼👻?');
                       return;
                   }
                   if (!exifOjb.GPSLatitude || !exifOjb.GPSLongitude ||!exifOjb.Model) {
                       var param = {
                           photoUrl: sourceLink
                       }
                   }else{
                       // 纬度
                       var lat = GPS2Location(exifOjb.GPSLatitude.val);
                       // 经度
                       var lon = GPS2Location(exifOjb.GPSLongitude.val);

                       var param = {
                           photoUrl: sourceLink,
                           lat: lat,
                           lon: lon,
                           camera: exifOjb.Model.val
                       }

                   }
                   $.post('/savePhoto',param,function (r) {
                       console.log(r)
                   });
                   $('body').append('<p>'+sourceLink+'</p>');
                   $('body').append('<img src="'+sourceLink+'" width="300px" height="300px"/><br/>');
                   $('body').append('<img style="position: absolute;clip: rect(1px auto 270px 0px);" src="http://api.map.baidu.com/staticimage?markers='+lon+','+lat+'&markerStyles=l,W&zoom=12&width=600" />');
               },
               'Error': function(up, err, errTip) {
                   console.error(errTip);
               },
               'UploadComplete': function() {
                   //队列文件处理完毕后，处理相关的事情
               },
               'Key': function(up, file) {
                   // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
                   // 该配置必须要在unique_names: false，save_key: false时才生效

                   var key = 'trace'+new Date().getTime();
                   // do something with key here
                   return key;
               }
           }
       });

       uploader.bind('FileUploaded', function() {
           console.log('hello man,a file is uploaded');
       });

       var GPS2Location = function(str){
 			var arr = str.split(', ');
	        var d = arr[0],
	        f = arr[1],
	        m = arr[2],
	        f = parseFloat(f) + parseFloat(m/60),
	        lc = parseFloat(f/60) + parseFloat(d);
	        return lc;
       }
   })
</script>
</body>
</html>
